# k3s_version = {{ k3s_version }}
# k3s_major_minor_version = {{ k3s_major_minor_version }}
{% if k3s_major_minor_version <= "v1.21" %}
# introduced at ??
# deprecated in 1.19, no longer serviced at v1.25
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: golang-hello-world-web-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: golang-hello-world-web
  minReplicas: 2
  maxReplicas: 3
  metrics:
  # only valid for autoscaling/v2beta1
  - type: Resource
    resource:
      name: cpu
      targetAverageUtilization: 40 # deprecated at v2beta2
{% endif %}
{% if k3s_major_minor_version == "v1.21" %}
# introduced at v1.18
# no longer served at v1.26
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: golang-hello-world-web-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: golang-hello-world-web
  minReplicas: 2
  maxReplicas: 4
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 40
{% endif %}
{% if k3s_major_minor_version >= "v1.23" %}
# available since v.1.23
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: golang-hello-world-web-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: golang-hello-world-web
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 20
  behavior: 
    scaleDown:
      stabilizationWindowSeconds: 20 # seconds wait before adjusting, avoids flaping
      policies:
      - type: Pods
        value: 1  # number of pods to scale down at one time
        periodSeconds: 20 # seconds before each scale down
      selectPolicy: Max
{% endif %}
