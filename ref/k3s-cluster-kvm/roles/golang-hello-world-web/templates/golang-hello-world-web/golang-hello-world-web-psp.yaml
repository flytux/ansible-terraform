# k3s_version = {{ k3s_version }}
# k3s_major_minor_version = {{ k3s_major_minor_version }}
---
{% if k3s_major_minor_version <= "v1.25" %}
# deprecated in v1.21 and no longer served at v1.25
# https://kubernetes.io/docs/concepts/security/pod-security-policy/
# https://kubernetes.io/blog/2021/04/06/podsecuritypolicy-deprecation-past-present-and-future/
# https://msazure.club/podsecuritypolicy-explained-by-examples/
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  annotations:
    apparmor.security.beta.kubernetes.io/allowedProfileNames: 'runtime/default'
    apparmor.security.beta.kubernetes.io/defaultProfileName:  'runtime/default'
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'docker/default'
    seccomp.security.alpha.kubernetes.io/defaultProfileName:  'docker/default'
  name: 100-psp
spec:
  # default set of capabilities are implicitly allowed
  allowedCapabilities: []
  allowPrivilegeEscalation: false
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      # Forbid adding the root group.
      - min: 1
        max: 65535
  hostIPC: false
  hostNetwork: false
  hostPID: false
  privileged: false
  readOnlyRootFilesystem: false
  runAsUser:
    rule: 'MustRunAsNonRoot'
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      # Forbid adding the root group.
      - min: 1
        max: 65535
  volumes:
  - 'configMap'
  - 'downwardAPI'
  - 'emptyDir'
  - 'persistentVolumeClaim'
  - 'projected'
  - 'secret'
  hostPorts:
  - min: 0
    max: 0
{% else %}
apiVersion: v1
kind: Namespace
metadata:
  name: default
{% endif %}
